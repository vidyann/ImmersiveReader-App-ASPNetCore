#pragma checksum "C:\Users\vinara\source\repos\immersiveappaspcore\immersiveappaspcore\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "93f77eac8c76659875b5b5e601babbccc19fd669"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\vinara\source\repos\immersiveappaspcore\immersiveappaspcore\Views\_ViewImports.cshtml"
using immersiveappaspcore;

#line default
#line hidden
#line 2 "C:\Users\vinara\source\repos\immersiveappaspcore\immersiveappaspcore\Views\_ViewImports.cshtml"
using immersiveappaspcore.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"93f77eac8c76659875b5b5e601babbccc19fd669", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"12258d80ed327b31cb9730dfce0d0c3eee8cc146", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\vinara\source\repos\immersiveappaspcore\immersiveappaspcore\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Immersive Reader C# Quickstart";

#line default
#line hidden
            BeginContext(66, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Styles", async() => {
                BeginContext(85, 225, true);
                WriteLiteral("\r\n    <style type=\"text/css\">\r\n        .immersive-reader-button {\r\n            background-color: white;\r\n            margin-top: 5px;\r\n            border: 1px solid black;\r\n            float: right;\r\n        }\r\n    </style>\r\n");
                EndContext();
            }
            );
            BeginContext(313, 1758, true);
            WriteLiteral(@"
<div class=""container"">
    <button class=""immersive-reader-button"" data-button-style=""iconAndText"" data-locale=""en""></button>

    <h1 id=""ir-title"">About Immersive Reader</h1>
    <div id=""ir-content"" lang=""en-us"">
        <p>
            Immersive Reader is a tool that implements proven techniques to improve reading comprehension for emerging readers, language learners, and people with learning differences.
            The Immersive Reader is designed to make reading more accessible for everyone. The Immersive Reader
            <ul>
                <li>
                    Shows content in a minimal reading view
                </li>
                <li>
                    Displays pictures of commonly used words
                </li>
                <li>
                    Highlights nouns, verbs, adjectives, and adverbs
                </li>
                <li>
                    Reads your content out loud to you
                </li>
                <li>
                   ");
            WriteLiteral(@" Translates your content into another language
                </li>
                <li>
                    Breaks down words into syllables
                </li>
            </ul>
        </p>
        <h3>
            The Immersive Reader is available in many languages.
        </h3>
        <p lang=""es-es"">
            El Lector inmersivo está disponible en varios idiomas.
        </p>
        <p lang=""zh-cn"">
            沉浸式阅读器支持许多语言
        </p>
        <p lang=""de-de"">
            Der plastische Reader ist in vielen Sprachen verfügbar.
        </p>
        <p lang=""ar-eg"" dir=""rtl"" style=""text-align:right"">
            يتوفر \""القارئ الشامل\"" في العديد من اللغات.
        </p>
    </div>
</div>
");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(2090, 309, true);
                WriteLiteral(@"
    <script src=""https://contentstorage.onenote.office.net/onenoteltir/immersivereadersdk/immersive-reader-sdk.1.0.0.js""></script>
    <script>
        function getTokenAndSubdomainAsync() {
            return new Promise(function (resolve, reject) {
                $.ajax({
                    url: """);
                EndContext();
                BeginContext(2400, 42, false);
#line 69 "C:\Users\vinara\source\repos\immersiveappaspcore\immersiveappaspcore\Views\Home\Index.cshtml"
                     Write(Url.Action("GetTokenAndSubdomain", "Home"));

#line default
#line hidden
                EndContext();
                BeginContext(2442, 2325, true);
                WriteLiteral(@""",
                    type: ""GET"",
                    success: function (data) {
                        if (data.error) {
                            reject(data.error);
                        } else {
                            resolve(data);
                        }
                    },
                    error: function (err) {
                        reject(err);
                    }
                });
            });
        }

        $("".immersive-reader-button"").click(function () {
            handleLaunchImmersiveReader();
        });

        function handleLaunchImmersiveReader() {
            getTokenAndSubdomainAsync()
                .then(function (response) {
                    const token = response[""token""];
                    const subdomain = response[""subdomain""];

                    // Learn more about chunk usage and supported MIME types https://docs.microsoft.com/en-us/azure/cognitive-services/immersive-reader/reference#chunk
                   ");
                WriteLiteral(@" const data = {
                        title: $(""#ir-title"").text(),
                        chunks: [{
                            content: $(""#ir-content"").html(),
                            mimeType: ""text/html""
                        }]
                    };

                    // Learn more about options https://docs.microsoft.com/en-us/azure/cognitive-services/immersive-reader/reference#options
                    const options = {
                        ""onExit"": exitCallback,
                        ""uiZIndex"": 2000
                    };

                    ImmersiveReader.launchAsync(token, subdomain, data, options)
                        .catch(function (error) {
                            alert(""Error in launching the Immersive Reader. Check the console."");
                            console.log(error);
                        });
                })
                .catch(function (error) {
                    alert(""Error in getting the Immersive Reader token and su");
                WriteLiteral(@"bdomain. Check the console."");
                    console.log(error);
                });
        }

        function exitCallback() {
            console.log(""This is the callback function. It is executed when the Immersive Reader closes."");
        }
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
